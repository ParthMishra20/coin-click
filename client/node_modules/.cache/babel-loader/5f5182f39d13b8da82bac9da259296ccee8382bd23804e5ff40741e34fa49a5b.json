{"ast":null,"code":"var _jsxFileName = \"/Users/parthmishra/Desktop/coin-clicker-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport customImage from \"./coin.png\";\nimport { FaHome, FaGift, FaWallet } from \"react-icons/fa\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [loading, setLoading] = useState(true);\n  const [currentScreen, setCurrentScreen] = useState(\"game\");\n  const [progress, setProgress] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [goal, setGoal] = useState(100);\n  const [loadingBarProgress, setLoadingBarProgress] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [reward, setReward] = useState(0);\n  const [tapPower, setTapPower] = useState(1);\n  const levelRewards = [10, 50, 100, 250, 500, 1000, 2500, 5000];\n  const levelGoals = [100, 500, 1000, 2000, 5000, 10000, 50000, 100000];\n  const tapPowerUpgrades = [{\n    level: 1,\n    cost: 200,\n    multiplier: 1\n  }, {\n    level: 2,\n    cost: 400,\n    multiplier: 2\n  }, {\n    level: 3,\n    cost: 800,\n    multiplier: 3\n  }, {\n    level: 4,\n    cost: 1600,\n    multiplier: 4\n  }, {\n    level: 5,\n    cost: 3200,\n    multiplier: 5\n  }, {\n    level: 6,\n    cost: 6400,\n    multiplier: 6\n  }, {\n    level: 7,\n    cost: 12800,\n    multiplier: 7\n  }, {\n    level: 8,\n    cost: 25600,\n    multiplier: 8\n  }];\n  const telegramId = \"your-unique-telegram-id\"; // You should replace this with a dynamic value when the user first interacts with the app.\n\n  useEffect(() => {\n    // Fetch the user progress when the app loads\n    fetchProgress(telegramId);\n\n    // Simulate the loading bar\n    const interval = setInterval(() => {\n      setLoadingBarProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setLoading(false);\n          return 100;\n        }\n        return prev + 5;\n      });\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n  const saveProgress = async (telegramId, progress, level, reward, tapPower) => {\n    try {\n      const response = await axios.post(`http://localhost:5001/api/user/${telegramId}`, {\n        progress,\n        level,\n        reward,\n        tapPower\n      });\n      console.log('Progress saved:', response.data);\n    } catch (error) {\n      console.error('Error saving progress:', error);\n    }\n  };\n  const fetchProgress = async telegramId => {\n    try {\n      const response = await axios.get(`http://localhost:5001/api/user/${telegramId}`);\n      const user = response.data;\n      setProgress(user.progress);\n      setLevel(user.level);\n      setReward(user.reward);\n      setTapPower(user.tapPower);\n    } catch (error) {\n      console.error('Error fetching progress:', error);\n    }\n  };\n  const handleCoinClick = () => {\n    const newProgress = progress + tapPower;\n    const newReward = reward + tapPower;\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n    }, 500);\n    if (newProgress >= goal) {\n      const newLevel = level + 1;\n      let newGoal;\n      if (newLevel <= levelGoals.length) {\n        newGoal = levelGoals[newLevel - 1];\n        const levelUpReward = levelRewards[newLevel - 1] || levelRewards[levelRewards.length - 1];\n        setReward(prevReward => prevReward + levelUpReward);\n      } else {\n        newGoal = goal * 2;\n      }\n      setLevel(newLevel);\n      setProgress(0);\n      setGoal(newGoal);\n    } else {\n      setProgress(newProgress);\n    }\n    setReward(newReward);\n\n    // Save the updated progress\n    saveProgress(telegramId, newProgress, level, newReward, tapPower);\n  };\n  const handleTapPowerUpgrade = () => {\n    // Find the current upgrade information\n    const currentUpgrade = tapPowerUpgrades.find(upgrade => upgrade.multiplier === tapPower);\n    const currentUpgradeIndex = tapPowerUpgrades.findIndex(upgrade => upgrade.multiplier === tapPower);\n    if (currentUpgradeIndex === -1) {\n      alert(\"Error: Current tap power level not found.\");\n      return;\n    }\n\n    // Ensure the first upgrade always costs 200\n    const nextUpgrade = currentUpgradeIndex === 0 ? {\n      level: 2,\n      cost: 200,\n      multiplier: 2\n    } : tapPowerUpgrades[currentUpgradeIndex + 1];\n    if (nextUpgrade) {\n      // Check if you have enough rewards to upgrade\n      if (reward >= nextUpgrade.cost) {\n        // Update reward and tap power correctly\n        setReward(prevReward => prevReward - nextUpgrade.cost);\n        setTapPower(nextUpgrade.multiplier);\n\n        // Save the updated progress\n        saveProgress(telegramId, progress, level, reward - nextUpgrade.cost, nextUpgrade.multiplier);\n      } else {\n        alert(`Not enough rewards! You need ${nextUpgrade.cost} rewards to upgrade.`);\n      }\n    } else {\n      alert('You have reached the maximum tap power upgrade!');\n    }\n  };\n  const renderGameScreen = () => {\n    // Find the current upgrade information based on the tap power multiplier\n    const currentUpgrade = tapPowerUpgrades.find(upgrade => upgrade.multiplier === tapPower);\n\n    // Modify the cost logic to ensure first upgrade shows 200\n    const currentLevel = currentUpgrade ? currentUpgrade.level : 1;\n    const currentCost = currentUpgrade ? currentUpgrade.level === 1 ? 200 : currentUpgrade.cost : 200;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-level-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-fill\",\n            style: {\n              width: `${progress / goal * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-indicator\",\n          children: [\"Level: \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-layout-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tap-power-upgrade-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tap-power-level\",\n            children: [\"Tap Power: Level \", currentLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTapPowerUpgrade,\n            className: \"upgrade-button\",\n            children: [\"Upgrade (Cost: \", currentCost, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `clicker ${isAnimating ? \"clicked\" : \"\"}`,\n            onClick: handleCoinClick,\n            style: {\n              width: \"150px\",\n              height: \"150px\",\n              backgroundImage: `url(${customImage})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n              border: \"2px solid #fff\",\n              borderRadius: \"50%\",\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reward-display\",\n        children: [\"Reward: \", reward]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this);\n  };\n  const renderWalletScreen = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Coming soon...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n  const renderDailyCheckInScreen = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-check-in-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Check-In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Coming soon...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n  const renderContent = () => {\n    switch (currentScreen) {\n      case \"game\":\n        return renderGameScreen();\n      case \"dailyCheckIn\":\n        return renderDailyCheckInScreen();\n      case \"wallet\":\n        return renderWalletScreen();\n      default:\n        return renderGameScreen();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar-progress\",\n          style: {\n            width: `${loadingBarProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation bg-gray-100 border-t flex justify-around items-center py-3 fixed bottom-0 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentScreen(\"game\"),\n          className: `flex flex-col items-center ${currentScreen === \"game\" ? \"text-black\" : \"text-gray-500\"}`,\n          children: /*#__PURE__*/_jsxDEV(FaHome, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentScreen(\"wallet\"),\n          className: `flex flex-col items-center ${currentScreen === \"wallet\" ? \"text-black\" : \"text-gray-500\"}`,\n          children: /*#__PURE__*/_jsxDEV(FaWallet, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentScreen(\"dailyCheckIn\"),\n          className: `flex flex-col items-center ${currentScreen === \"dailyCheckIn\" ? \"text-black\" : \"text-gray-500\"}`,\n          children: /*#__PURE__*/_jsxDEV(FaGift, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"GHY4yJM3tGZ/rlOF2lxxzTACn/s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","customImage","FaHome","FaGift","FaWallet","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","loading","setLoading","currentScreen","setCurrentScreen","progress","setProgress","level","setLevel","goal","setGoal","loadingBarProgress","setLoadingBarProgress","isAnimating","setIsAnimating","reward","setReward","tapPower","setTapPower","levelRewards","levelGoals","tapPowerUpgrades","cost","multiplier","telegramId","fetchProgress","interval","setInterval","prev","clearInterval","saveProgress","response","post","console","log","data","error","get","user","handleCoinClick","newProgress","newReward","setTimeout","newLevel","newGoal","length","levelUpReward","prevReward","handleTapPowerUpgrade","currentUpgrade","find","upgrade","currentUpgradeIndex","findIndex","alert","nextUpgrade","renderGameScreen","currentLevel","currentCost","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","height","backgroundImage","backgroundSize","backgroundPosition","border","borderRadius","cursor","renderWalletScreen","renderDailyCheckInScreen","renderContent","size","_c","$RefreshReg$"],"sources":["/Users/parthmishra/Desktop/coin-clicker-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport customImage from \"./coin.png\"; \nimport { FaHome, FaGift, FaWallet } from \"react-icons/fa\";\nimport axios from 'axios';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [currentScreen, setCurrentScreen] = useState(\"game\");\n  const [progress, setProgress] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [goal, setGoal] = useState(100);\n  const [loadingBarProgress, setLoadingBarProgress] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [reward, setReward] = useState(0);\n  const [tapPower, setTapPower] = useState(1);\n\n  const levelRewards = [\n    10, 50, 100, 250, 500, 1000, 2500, 5000\n  ]; \n\n  const levelGoals = [\n    100, 500, 1000, 2000, 5000, 10000, 50000, 100000\n  ];\n\n  const tapPowerUpgrades = [\n    { level: 1, cost: 200, multiplier: 1 },\n    { level: 2, cost: 400, multiplier: 2 },\n    { level: 3, cost: 800, multiplier: 3 },\n    { level: 4, cost: 1600, multiplier: 4 },\n    { level: 5, cost: 3200, multiplier: 5 },\n    { level: 6, cost: 6400, multiplier: 6 },\n    { level: 7, cost: 12800, multiplier: 7 },\n    { level: 8, cost: 25600, multiplier: 8 }\n  ];\n\n  const telegramId = \"your-unique-telegram-id\"; // You should replace this with a dynamic value when the user first interacts with the app.\n\n  useEffect(() => {\n    // Fetch the user progress when the app loads\n    fetchProgress(telegramId);\n\n    // Simulate the loading bar\n    const interval = setInterval(() => {\n      setLoadingBarProgress((prev) => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setLoading(false);\n          return 100;\n        }\n        return prev + 5;\n      });\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const saveProgress = async (telegramId, progress, level, reward, tapPower) => {\n    try {\n      const response = await axios.post(`http://localhost:5001/api/user/${telegramId}`, {\n        progress,\n        level,\n        reward,\n        tapPower\n      });\n      console.log('Progress saved:', response.data);\n    } catch (error) {\n      console.error('Error saving progress:', error);\n    }\n  };\n\n  const fetchProgress = async (telegramId) => {\n    try {\n      const response = await axios.get(`http://localhost:5001/api/user/${telegramId}`);\n      const user = response.data;\n      setProgress(user.progress);\n      setLevel(user.level);\n      setReward(user.reward);\n      setTapPower(user.tapPower);\n    } catch (error) {\n      console.error('Error fetching progress:', error);\n    }\n  };\n\n  const handleCoinClick = () => {\n    const newProgress = progress + tapPower;\n    const newReward = reward + tapPower;\n\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n    }, 500);\n\n    if (newProgress >= goal) {\n      const newLevel = level + 1;\n      let newGoal;\n\n      if (newLevel <= levelGoals.length) {\n        newGoal = levelGoals[newLevel - 1];\n        \n        const levelUpReward = levelRewards[newLevel - 1] || levelRewards[levelRewards.length - 1];\n        setReward(prevReward => prevReward + levelUpReward);\n      } else {\n        newGoal = goal * 2;\n      }\n\n      setLevel(newLevel);\n      setProgress(0);\n      setGoal(newGoal);\n    } else {\n      setProgress(newProgress);\n    }\n\n    setReward(newReward);\n    \n    // Save the updated progress\n    saveProgress(telegramId, newProgress, level, newReward, tapPower);\n  };\n  \n  const handleTapPowerUpgrade = () => {\n    // Find the current upgrade information\n    const currentUpgrade = tapPowerUpgrades.find(upgrade => upgrade.multiplier === tapPower);\n    const currentUpgradeIndex = tapPowerUpgrades.findIndex(upgrade => upgrade.multiplier === tapPower);\n    \n    if (currentUpgradeIndex === -1) {\n      alert(\"Error: Current tap power level not found.\");\n      return;\n    }\n\n    // Ensure the first upgrade always costs 200\n    const nextUpgrade = currentUpgradeIndex === 0 \n      ? { level: 2, cost: 200, multiplier: 2 } \n      : tapPowerUpgrades[currentUpgradeIndex + 1];\n    \n    if (nextUpgrade) {\n      // Check if you have enough rewards to upgrade\n      if (reward >= nextUpgrade.cost) {\n        // Update reward and tap power correctly\n        setReward(prevReward => prevReward - nextUpgrade.cost);\n        setTapPower(nextUpgrade.multiplier);\n        \n        // Save the updated progress\n        saveProgress(telegramId, progress, level, reward - nextUpgrade.cost, nextUpgrade.multiplier);\n      } else {\n        alert(`Not enough rewards! You need ${nextUpgrade.cost} rewards to upgrade.`);\n      }\n    } else {\n      alert('You have reached the maximum tap power upgrade!');\n    }\n  };\n    \n  \n\n  const renderGameScreen = () => {\n    // Find the current upgrade information based on the tap power multiplier\n    const currentUpgrade = tapPowerUpgrades.find(upgrade => upgrade.multiplier === tapPower);\n  \n    // Modify the cost logic to ensure first upgrade shows 200\n    const currentLevel = currentUpgrade ? currentUpgrade.level : 1;\n    const currentCost = currentUpgrade \n      ? (currentUpgrade.level === 1 ? 200 : currentUpgrade.cost)\n      : 200;\n  \n    return (\n      <div className=\"game-screen\">\n        <div className=\"progress-level-container\">\n          <div className=\"progress-container\">\n            <div\n              className=\"progress-bar-fill\"\n              style={{\n                width: `${(progress / goal) * 100}%`,\n              }}\n            ></div>\n          </div>\n          <div className=\"level-indicator\">Level: {level}</div>\n        </div>\n  \n        <div className=\"game-layout-container\">\n          <div className=\"tap-power-upgrade-section\">\n            <div className=\"tap-power-level\">\n              Tap Power: Level {currentLevel}\n            </div>\n            <button \n              onClick={handleTapPowerUpgrade} \n              className=\"upgrade-button\"\n            >\n              Upgrade (Cost: {currentCost})\n            </button>\n          </div>\n  \n          <div>\n            <div\n              className={`clicker ${isAnimating ? \"clicked\" : \"\"}`}\n              onClick={handleCoinClick}\n              style={{\n                width: \"150px\",\n                height: \"150px\",\n                backgroundImage: `url(${customImage})`,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                border: \"2px solid #fff\",\n                borderRadius: \"50%\",\n                cursor: \"pointer\",\n              }}\n            ></div>\n          </div>\n        </div>\n  \n        <div className=\"reward-display\">\n          Reward: {reward}\n        </div>\n      </div>\n    );\n  };\n  \n\n  const renderWalletScreen = () => (\n    <div className=\"wallet-screen\">\n      <h2>Wallet</h2>\n      <p>Coming soon...</p>\n    </div>\n  );\n\n  const renderDailyCheckInScreen = () => (\n    <div className=\"daily-check-in-screen\">\n      <h2>Daily Check-In</h2>\n      <p>Coming soon...</p>\n    </div>\n  );\n\n  const renderContent = () => {\n    switch (currentScreen) {\n      case \"game\":\n        return renderGameScreen();\n      case \"dailyCheckIn\":\n        return renderDailyCheckInScreen();\n      case \"wallet\":\n        return renderWalletScreen(); \n      default:\n        return renderGameScreen();\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {loading ? (\n        <div className=\"loading-screen\">\n          <div className=\"loading-bar\">\n            <div\n              className=\"loading-bar-progress\"\n              style={{ width: `${loadingBarProgress}%` }}\n            ></div>\n          </div>\n        </div>\n      ) : (\n        <>\n          <div className=\"content\">{renderContent()}</div>\n          <div className=\"navigation bg-gray-100 border-t flex justify-around items-center py-3 fixed bottom-0 w-full\">\n            <button\n              onClick={() => setCurrentScreen(\"game\")}\n              className={`flex flex-col items-center ${currentScreen === \"game\" ? \"text-black\" : \"text-gray-500\"}`}\n            >\n              <FaHome size={24} />\n            </button>\n\n            <button\n              onClick={() => setCurrentScreen(\"wallet\")}\n              className={`flex flex-col items-center ${currentScreen === \"wallet\" ? \"text-black\" : \"text-gray-500\"}`}\n            >\n              <FaWallet size={24} />\n            </button>\n\n            <button\n              onClick={() => setCurrentScreen(\"dailyCheckIn\")}\n              className={`flex flex-col items-center ${currentScreen === \"dailyCheckIn\" ? \"text-black\" : \"text-gray-500\"}`}\n            >\n              <FaGift size={24} />\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}