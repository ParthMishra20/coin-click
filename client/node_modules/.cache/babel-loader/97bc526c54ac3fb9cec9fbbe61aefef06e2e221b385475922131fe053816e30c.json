{"ast":null,"code":"var _jsxFileName = \"/Users/parthmishra/Desktop/coin-clicker-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport customImage from \"./coin.png\";\nimport { FaHome, FaGift, FaWallet } from \"react-icons/fa\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [username, setUsername] = useState(null);\n  const [tempUsername, setTempUsername] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [currentScreen, setCurrentScreen] = useState(\"game\");\n  const [progress, setProgress] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [goal, setGoal] = useState(100);\n  const [loadingBarProgress, setLoadingBarProgress] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [reward, setReward] = useState(0);\n  const [tapPower, setTapPower] = useState(1);\n  const levelRewards = [10, 50, 100, 250, 500, 1000, 2500, 5000];\n  const levelGoals = [100, 500, 1000, 2000, 5000, 10000, 50000, 100000];\n  const tapPowerUpgrades = [{\n    level: 1,\n    cost: 200,\n    multiplier: 1\n  }, {\n    level: 2,\n    cost: 400,\n    multiplier: 2\n  }, {\n    level: 3,\n    cost: 800,\n    multiplier: 3\n  }, {\n    level: 4,\n    cost: 1600,\n    multiplier: 4\n  }, {\n    level: 5,\n    cost: 3200,\n    multiplier: 5\n  }, {\n    level: 6,\n    cost: 6400,\n    multiplier: 6\n  }, {\n    level: 7,\n    cost: 12800,\n    multiplier: 7\n  }, {\n    level: 8,\n    cost: 25600,\n    multiplier: 8\n  }];\n  const telegramId = \"your-unique-telegram-id\";\n  useEffect(() => {\n    const savedUsername = localStorage.getItem(\"username\");\n    if (savedUsername) {\n      setUsername(savedUsername);\n    }\n    fetchProgress(telegramId);\n    const interval = setInterval(() => {\n      setLoadingBarProgress(prev => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setLoading(false);\n          return 100;\n        }\n        return prev + 5;\n      });\n    }, 100);\n    return () => clearInterval(interval);\n  }, []);\n  const BASE_URL = process.env.REACT_APP_API_URL;\n  const saveProgress = async (telegramId, progress, level, reward, tapPower) => {\n    try {\n      const response = await axios.post(`${BASE_URL}/api/user/${telegramId}`, {\n        progress,\n        level,\n        reward,\n        tapPower\n      });\n      console.log('Progress saved:', response.data);\n    } catch (error) {\n      console.error('Error saving progress:', error);\n    }\n  };\n  const fetchProgress = async telegramId => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/user/${telegramId}`);\n      const user = response.data;\n      setProgress(user.progress);\n      setLevel(user.level);\n      setReward(user.reward);\n      setTapPower(user.tapPower);\n    } catch (error) {\n      console.error('Error fetching progress:', error);\n    }\n  };\n  const handleCoinClick = () => {\n    const newProgress = progress + tapPower;\n    const newReward = reward + tapPower;\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n    }, 500);\n    if (newProgress >= goal) {\n      const newLevel = level + 1;\n      let newGoal;\n      if (newLevel <= levelGoals.length) {\n        newGoal = levelGoals[newLevel - 1];\n        const levelUpReward = levelRewards[newLevel - 1] || levelRewards[levelRewards.length - 1];\n        setReward(prevReward => prevReward + levelUpReward);\n      } else {\n        newGoal = goal * 2;\n      }\n      setLevel(newLevel);\n      setProgress(0);\n      setGoal(newGoal);\n    } else {\n      setProgress(newProgress);\n    }\n    setReward(newReward);\n    saveProgress(telegramId, newProgress, level, newReward, tapPower);\n  };\n  const handleTapPowerUpgrade = () => {\n    const currentUpgradeIndex = tapPowerUpgrades.findIndex(upgrade => upgrade.multiplier === tapPower);\n    if (currentUpgradeIndex === -1) {\n      alert(\"Error: Current tap power level not found.\");\n      return;\n    }\n    const nextUpgrade = (() => {\n      switch (currentUpgradeIndex) {\n        case 0:\n          return {\n            level: 2,\n            cost: 200,\n            multiplier: 2\n          };\n        case 1:\n          return {\n            level: 3,\n            cost: 400,\n            multiplier: 3\n          };\n        case 2:\n          return {\n            level: 4,\n            cost: 800,\n            multiplier: 4\n          };\n        case 3:\n          return {\n            level: 5,\n            cost: 1600,\n            multiplier: 5\n          };\n        case 4:\n          return {\n            level: 6,\n            cost: 3200,\n            multiplier: 6\n          };\n        case 5:\n          return {\n            level: 7,\n            cost: 6400,\n            multiplier: 7\n          };\n        case 6:\n          return {\n            level: 8,\n            cost: 12800,\n            multiplier: 8\n          };\n        default:\n          return null;\n      }\n    })();\n    if (nextUpgrade) {\n      if (reward >= nextUpgrade.cost) {\n        setReward(prevReward => prevReward - nextUpgrade.cost);\n        setTapPower(nextUpgrade.multiplier);\n        saveProgress(telegramId, progress, level, reward - nextUpgrade.cost, nextUpgrade.multiplier);\n      } else {\n        alert(`Not enough rewards! You need ${nextUpgrade.cost} rewards to upgrade.`);\n      }\n    } else {\n      alert('You have reached the maximum tap power upgrade!');\n    }\n  };\n  const renderGameScreen = () => {\n    const currentLevel = (() => {\n      switch (tapPower) {\n        case 1:\n          return 1;\n        case 2:\n          return 2;\n        case 3:\n          return 3;\n        case 4:\n          return 4;\n        case 5:\n          return 5;\n        case 6:\n          return 6;\n        case 7:\n          return 7;\n        case 8:\n          return 8;\n        default:\n          return 1;\n      }\n    })();\n    const currentCost = (() => {\n      switch (tapPower) {\n        case 1:\n          return 200;\n        case 2:\n          return 400;\n        case 3:\n          return 800;\n        case 4:\n          return 1600;\n        case 5:\n          return 3200;\n        case 6:\n          return 6400;\n        case 7:\n          return 12800;\n        case 8:\n          return 25600;\n        default:\n          return 200;\n      }\n    })();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-screen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-level-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-fill\",\n            style: {\n              width: `${progress / goal * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-indicator\",\n          children: [\"Level: \", level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-layout-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tap-power-upgrade-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tap-power-level\",\n            children: [\"Tap Power: Level \", currentLevel]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleTapPowerUpgrade,\n            className: \"upgrade-button\",\n            children: [\"Upgrade (Cost: \", currentCost, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `clicker ${isAnimating ? \"clicked\" : \"\"}`,\n            onClick: handleCoinClick,\n            style: {\n              width: \"150px\",\n              height: \"150px\",\n              backgroundImage: `url(${customImage})`,\n              backgroundSize: \"cover\",\n              backgroundPosition: \"center\",\n              border: \"2px solid #fff\",\n              borderRadius: \"50%\",\n              cursor: \"pointer\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reward-display\",\n        children: [\"Reward: \", reward]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  };\n  const renderWalletScreen = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wallet-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Coming soon...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 243,\n    columnNumber: 5\n  }, this);\n  const renderDailyCheckInScreen = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-check-in-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily Check-In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Coming soon...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 250,\n    columnNumber: 5\n  }, this);\n  const renderContent = () => {\n    switch (currentScreen) {\n      case \"game\":\n        return renderGameScreen();\n      case \"dailyCheckIn\":\n        return renderDailyCheckInScreen();\n      case \"wallet\":\n        return renderWalletScreen();\n      default:\n        return renderGameScreen();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-bar-fill\",\n          style: {\n            width: `${loadingBarProgress}%`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderContent(), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentScreen(\"game\"),\n          children: /*#__PURE__*/_jsxDEV(FaHome, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentScreen(\"dailyCheckIn\"),\n          children: /*#__PURE__*/_jsxDEV(FaGift, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentScreen(\"wallet\"),\n          children: /*#__PURE__*/_jsxDEV(FaWallet, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RpMHA+bSpbfjVvvjSmLSPUpd34A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","customImage","FaHome","FaGift","FaWallet","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","username","setUsername","tempUsername","setTempUsername","usernameError","setUsernameError","loading","setLoading","currentScreen","setCurrentScreen","progress","setProgress","level","setLevel","goal","setGoal","loadingBarProgress","setLoadingBarProgress","isAnimating","setIsAnimating","reward","setReward","tapPower","setTapPower","levelRewards","levelGoals","tapPowerUpgrades","cost","multiplier","telegramId","savedUsername","localStorage","getItem","fetchProgress","interval","setInterval","prev","clearInterval","BASE_URL","process","env","REACT_APP_API_URL","saveProgress","response","post","console","log","data","error","get","user","handleCoinClick","newProgress","newReward","setTimeout","newLevel","newGoal","length","levelUpReward","prevReward","handleTapPowerUpgrade","currentUpgradeIndex","findIndex","upgrade","alert","nextUpgrade","renderGameScreen","currentLevel","currentCost","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","height","backgroundImage","backgroundSize","backgroundPosition","border","borderRadius","cursor","renderWalletScreen","renderDailyCheckInScreen","renderContent","_c","$RefreshReg$"],"sources":["/Users/parthmishra/Desktop/coin-clicker-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport customImage from \"./coin.png\"; \nimport { FaHome, FaGift, FaWallet } from \"react-icons/fa\";\nimport axios from 'axios';\n\nfunction App() {\n  const [username, setUsername] = useState(null);\n  const [tempUsername, setTempUsername] = useState(\"\");\n  const [usernameError, setUsernameError] = useState(\"\");\n\n  const [loading, setLoading] = useState(true);\n  const [currentScreen, setCurrentScreen] = useState(\"game\");\n  const [progress, setProgress] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [goal, setGoal] = useState(100);\n  const [loadingBarProgress, setLoadingBarProgress] = useState(0);\n  const [isAnimating, setIsAnimating] = useState(false);\n  const [reward, setReward] = useState(0);\n  const [tapPower, setTapPower] = useState(1);\n\n  const levelRewards = [\n    10, 50, 100, 250, 500, 1000, 2500, 5000\n  ]; \n\n  const levelGoals = [\n    100, 500, 1000, 2000, 5000, 10000, 50000, 100000\n  ];\n\n  const tapPowerUpgrades = [\n    { level: 1, cost: 200, multiplier: 1 },\n    { level: 2, cost: 400, multiplier: 2 },\n    { level: 3, cost: 800, multiplier: 3 },\n    { level: 4, cost: 1600, multiplier: 4 },\n    { level: 5, cost: 3200, multiplier: 5 },\n    { level: 6, cost: 6400, multiplier: 6 },\n    { level: 7, cost: 12800, multiplier: 7 },\n    { level: 8, cost: 25600, multiplier: 8 }\n  ];\n\n  const telegramId = \"your-unique-telegram-id\";\n\n  useEffect(() => {\n    const savedUsername = localStorage.getItem(\"username\");\n    if (savedUsername) {\n      setUsername(savedUsername);\n    }\n\n    fetchProgress(telegramId);\n\n    const interval = setInterval(() => {\n      setLoadingBarProgress((prev) => {\n        if (prev >= 100) {\n          clearInterval(interval);\n          setLoading(false);\n          return 100;\n        }\n        return prev + 5;\n      });\n    }, 100);\n\n    return () => clearInterval(interval);\n  }, []);\n\n  const BASE_URL = process.env.REACT_APP_API_URL;\n\n  const saveProgress = async (telegramId, progress, level, reward, tapPower) => {\n    try {\n      const response = await axios.post(`${BASE_URL}/api/user/${telegramId}`, {\n        progress,\n        level,\n        reward,\n        tapPower\n      });\n      console.log('Progress saved:', response.data);\n    } catch (error) {\n      console.error('Error saving progress:', error);\n    }\n  };\n\n  const fetchProgress = async (telegramId) => {\n    try {\n      const response = await axios.get(`${BASE_URL}/api/user/${telegramId}`);\n      const user = response.data;\n      setProgress(user.progress);\n      setLevel(user.level);\n      setReward(user.reward);\n      setTapPower(user.tapPower);\n    } catch (error) {\n      console.error('Error fetching progress:', error);\n    }\n  };\n\n  const handleCoinClick = () => {\n    const newProgress = progress + tapPower;\n    const newReward = reward + tapPower;\n\n    setIsAnimating(true);\n    setTimeout(() => {\n      setIsAnimating(false);\n    }, 500);\n\n    if (newProgress >= goal) {\n      const newLevel = level + 1;\n      let newGoal;\n\n      if (newLevel <= levelGoals.length) {\n        newGoal = levelGoals[newLevel - 1];\n        \n        const levelUpReward = levelRewards[newLevel - 1] || levelRewards[levelRewards.length - 1];\n        setReward(prevReward => prevReward + levelUpReward);\n      } else {\n        newGoal = goal * 2;\n      }\n\n      setLevel(newLevel);\n      setProgress(0);\n      setGoal(newGoal);\n    } else {\n      setProgress(newProgress);\n    }\n\n    setReward(newReward);\n    saveProgress(telegramId, newProgress, level, newReward, tapPower);\n  };\n\n  const handleTapPowerUpgrade = () => {\n    const currentUpgradeIndex = tapPowerUpgrades.findIndex(upgrade => upgrade.multiplier === tapPower);\n    \n    if (currentUpgradeIndex === -1) {\n      alert(\"Error: Current tap power level not found.\");\n      return;\n    }\n  \n    const nextUpgrade = (() => {\n      switch(currentUpgradeIndex) {\n        case 0: return { level: 2, cost: 200, multiplier: 2 };\n        case 1: return { level: 3, cost: 400, multiplier: 3 };\n        case 2: return { level: 4, cost: 800, multiplier: 4 };\n        case 3: return { level: 5, cost: 1600, multiplier: 5 };\n        case 4: return { level: 6, cost: 3200, multiplier: 6 };\n        case 5: return { level: 7, cost: 6400, multiplier: 7 };\n        case 6: return { level: 8, cost: 12800, multiplier: 8 };\n        default: return null;\n      }\n    })();\n    \n    if (nextUpgrade) {\n      if (reward >= nextUpgrade.cost) {\n        setReward(prevReward => prevReward - nextUpgrade.cost);\n        setTapPower(nextUpgrade.multiplier);\n        saveProgress(telegramId, progress, level, reward - nextUpgrade.cost, nextUpgrade.multiplier);\n      } else {\n        alert(`Not enough rewards! You need ${nextUpgrade.cost} rewards to upgrade.`);\n      }\n    } else {\n      alert('You have reached the maximum tap power upgrade!');\n    }\n  };\n\n  const renderGameScreen = () => {\n    const currentLevel = (() => {\n      switch(tapPower) {\n        case 1: return 1;\n        case 2: return 2;\n        case 3: return 3;\n        case 4: return 4;\n        case 5: return 5;\n        case 6: return 6;\n        case 7: return 7;\n        case 8: return 8;\n        default: return 1;\n      }\n    })();\n  \n    const currentCost = (() => {\n      switch(tapPower) {\n        case 1: return 200;\n        case 2: return 400;\n        case 3: return 800;\n        case 4: return 1600;\n        case 5: return 3200;\n        case 6: return 6400;\n        case 7: return 12800;\n        case 8: return 25600;\n        default: return 200;\n      }\n    })();\n\n    return (\n      <div className=\"game-screen\">\n        <div className=\"progress-level-container\">\n          <div className=\"progress-container\">\n            <div\n              className=\"progress-bar-fill\"\n              style={{\n                width: `${(progress / goal) * 100}%`,\n              }}\n            ></div>\n          </div>\n          <div className=\"level-indicator\">Level: {level}</div>\n        </div>\n  \n        <div className=\"game-layout-container\">\n          <div className=\"tap-power-upgrade-section\">\n            <div className=\"tap-power-level\">\n              Tap Power: Level {currentLevel}\n            </div>\n            <button \n              onClick={handleTapPowerUpgrade} \n              className=\"upgrade-button\"\n            >\n              Upgrade (Cost: {currentCost})\n            </button>\n          </div>\n  \n          <div>\n            <div\n              className={`clicker ${isAnimating ? \"clicked\" : \"\"}`}\n              onClick={handleCoinClick}\n              style={{\n                width: \"150px\",\n                height: \"150px\",\n                backgroundImage: `url(${customImage})`,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n                border: \"2px solid #fff\",\n                borderRadius: \"50%\",\n                cursor: \"pointer\",\n              }}\n            ></div>\n          </div>\n        </div>\n  \n        <div className=\"reward-display\">\n          Reward: {reward}\n        </div>\n      </div>\n    );\n  };\n\n  const renderWalletScreen = () => (\n    <div className=\"wallet-screen\">\n      <h2>Wallet</h2>\n      <p>Coming soon...</p>\n    </div>\n  );\n\n  const renderDailyCheckInScreen = () => (\n    <div className=\"daily-check-in-screen\">\n      <h2>Daily Check-In</h2>\n      <p>Coming soon...</p>\n    </div>\n  );\n\n  const renderContent = () => {\n    switch (currentScreen) {\n      case \"game\":\n        return renderGameScreen();\n      case \"dailyCheckIn\":\n        return renderDailyCheckInScreen();\n      case \"wallet\":\n        return renderWalletScreen(); \n      default:\n        return renderGameScreen();\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      {loading ? (\n        <div className=\"loading-screen\">\n          <div className=\"loading-bar\">\n            <div\n              className=\"loading-bar-fill\"\n              style={{ width: `${loadingBarProgress}%` }}\n            ></div>\n          </div>\n        </div>\n      ) : (\n        <>\n          {renderContent()}\n  \n          <div className=\"navigation\">\n            <button onClick={() => setCurrentScreen(\"game\")}>\n              <FaHome />\n            </button>\n            <button onClick={() => setCurrentScreen(\"dailyCheckIn\")}>\n              <FaGift />\n            </button>\n            <button onClick={() => setCurrentScreen(\"wallet\")}>\n              <FaWallet />\n            </button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}